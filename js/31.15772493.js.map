{"version":3,"file":"js/31.15772493.js","mappings":"meAIA,MAAMA,GAAQC,EAAAA,EAAAA,MAERC,GAASC,EAAAA,EAAAA,KAAI,GACbC,GAAUD,EAAAA,EAAAA,IAAI,CAClBE,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,KAAM,OAGFC,EAAMC,gBACJZ,EAAMa,SAAS,2BAA4B,CAC/CR,KAAMD,EAAQU,MAAMT,KACpBC,MAAOF,EAAQU,MAAMR,MACrBC,SAAUH,EAAQU,MAAMP,SACxBC,MAAOJ,EAAQU,MAAMN,MAAM,GAC3BC,SAAUL,EAAQU,MAAML,WAEtBT,EAAMe,MAAMC,QACdZ,EAAQU,MAAQ,IACXV,EAAQU,MACXT,KAAM,GACNC,MAAO,GACPW,SAAU,GACVT,MAAO,GACPE,KAAM,KACND,SAAU,KAGdP,EAAOY,OAAQ,CAAK,EAGhBI,EAASA,KACb,MAAMC,EAAOf,EAAQU,MAAMN,MAAM,GACjC,GAAIW,EAAM,CACR,MAAMT,EAAOU,IAAIC,gBAAgBF,GACjCf,EAAQU,MAAMJ,KAAOA,CACvB,MACEN,EAAQU,MAAMJ,KAAO,IACvB,E,wmFC1CF,MAAMY,EAAc,EAEpB,Q,wiBCCA,MAAMtB,GAAQC,EAAAA,EAAAA,OACdsB,EAAAA,EAAAA,KAAUX,UACHZ,EAAMe,MAAMS,cAAcC,gBACvBzB,EAAMa,SAAS,4BACvB,IAEF,MAAMa,GAAOC,EAAAA,EAAAA,KAAS,IAAM3B,EAAMe,MAAMS,cAAcC,WAEhDG,GAAUzB,EAAAA,EAAAA,IAAI,CAClB,CACE0B,KAAM,SACNC,KAAM,qBACNC,MAAO,QACPC,OAAQpB,gBACAZ,EAAMa,SAAS,8BAA+BoB,EAAG,GAG3D,CACEJ,KAAM,OACNC,KAAM,qBACNC,MAAO,OACPC,OAAQpB,UACNsB,EAAAA,EAAAA,KAAY,CAAE7B,KAAM,eAAgB8B,OAAQ,CAAEF,OAAO,KAKrDG,GAAOT,EAAAA,EAAAA,KAAS,IAChB3B,EAAMe,MAAMqB,KACP,WAEA,e,iqCClCX,MAAM,EAAc,EAEpB,Q,wECFA,MAAM,EAAc,EAEpB,O,2LCiBO,MAAMC,GAAmBC,EAAAA,EAAAA,GAAa,CAC3CC,WAAYC,QACZC,YAAa,CACXC,KAAMF,QACNG,SAAS,GAEXC,WAAYJ,YAETK,EAAAA,EAAAA,GAAkB,CACnBC,OAAQ,gBACRC,eAAgB,QAChBC,WAAY,CAAEC,UAAWC,EAAAA,GACzBC,OAAQ,QAET,YAEUC,GAAUC,EAAAA,EAAAA,KAAAA,CAAiC,CACtDhD,KAAM,UAENiD,MAAOjB,IAEPkB,MAAO,CACL,oBAAsBzC,IAAmB,GAG3C0C,MAAOF,EAAKG,GAAa,IAAX,MAAEC,GAAOD,EACrB,MAAME,GAAWC,EAAAA,EAAAA,GAAgBN,EAAO,eAClC,QAAEO,IAAYC,EAAAA,EAAAA,KAEdC,GAAU5D,EAAAA,EAAAA,MAChB,SAAS6D,EAAWC,GAClB,MAAMC,EAASD,EAAEE,cACXC,EAAQH,EAAEI,OAEhB,GACEH,IAAWE,GACXL,EAAQjD,OAAOwD,WAEfP,EAAQjD,OAAOyD,YAEd,CAACC,SAAUT,EAAQjD,MAAMwD,WAAWG,SAASL,KAE7CL,EAAQjD,MAAMwD,UAAUI,SAASN,GAClC,CACA,MAAMO,GAAYC,EAAAA,EAAAA,IAAkBb,EAAQjD,MAAMwD,WAElD,IAAKK,EAAUE,OAAQ,OAEvB,MAAMC,EAAeH,EAAU,GACzBI,EAAcJ,EAAUA,EAAUE,OAAS,GAE7CX,IAAWY,EACbC,EAAYC,QAEZF,EAAaE,OAEjB,CACF,CAEIC,EAAAA,KACFC,EAAAA,EAAAA,KAAM,IAAMvB,EAAS7C,OAASwC,EAAMb,cAAa0C,IAC/CA,EACIX,SAASY,iBAAiB,UAAWpB,GACrCQ,SAASa,oBAAoB,UAAWrB,EAAU,GACrD,CAAEsB,WAAW,KAGlBJ,EAAAA,EAAAA,IAAMvB,GAAU/C,gBACR2E,EAAAA,EAAAA,MACFJ,EACFpB,EAAQjD,MAAOwD,WAAWU,MAAM,CAAEQ,eAAe,IAEjDzB,EAAQjD,MAAO2E,aAAaT,MAAM,CAAEQ,eAAe,GACrD,IAGF,MAAME,GAAiB/D,EAAAA,EAAAA,KAAS,KAC9BgE,EAAAA,EAAAA,IAAW,CACT,gBAAiB,SACjB,gBAAiBC,OAAOjC,EAAS7C,QAChCwC,EAAMoC,kBAqCX,OAlCAG,EAAAA,EAAAA,IAAU,KACR,MAAOC,GAAgBC,EAAAA,EAAAA,YAAqBzC,GAE5C,OAAA0C,EAAAA,EAAAA,IAAAD,EAAAA,GAAAE,EAAAA,EAAAA,IAAA,KAEUlC,EAAO,MACN,CACL,WACA,CACE,uBAAwBT,EAAMf,WAC9B,uBAAwBe,EAAMV,YAEhCU,EAAM4C,OACP,MACO5C,EAAM6C,OACTL,EAAY,YACPnC,EAAS7C,MAAK,sBAAAsF,GAAdzC,EAAS7C,MAAKsF,EAAA,aACb,OAAM,eACAV,EAAe5E,MAAK,KAChC,UACA+C,GAAO,CAGVwC,UAAW3C,EAAM2C,UACjB1D,QAAS,mBAAA2D,EAAAC,UAAA1B,OAAI2B,EAAI,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJF,EAAIE,GAAAH,UAAAG,GAAA,OAAAV,EAAAA,EAAAA,IAAAW,EAAAA,EAAA,WAAAhE,QAAAA,IAAK,CAEhBe,EAAMf,aAAa6D,KAAK,GAE7B,KAMFI,EAAAA,EAAAA,GAAY,CAAC,EAAG7C,EACzB,G,oJCzHK,MAAM8C,GAAkBvE,EAAAA,EAAAA,GAAa,CAC1CwE,YAAatE,QACbuE,YAAavE,QACbwE,OAAQ,CAACC,OAAQrB,QACjBsB,MAAO1E,YAEJ2E,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,OACF,WAEUC,GAASlE,EAAAA,EAAAA,KAAAA,CAAgC,CACpDhD,KAAM,SAENiD,MAAOuD,IAEPrD,MAAOF,EAAKG,GAAa,IAAX,MAAEC,GAAOD,EACrB,MAAM,aAAE+D,IAAiBC,EAAAA,EAAAA,IAAanE,IAChC,eAAEoE,IAAmBC,EAAAA,EAAAA,GAAWrE,GAqCtC,OAnCAuC,EAAAA,EAAAA,IAAU,KAAAG,EAAAA,EAAAA,IAAA1C,EAAAsE,IAAA,OAEC,CACL,UACA,CACE,0BAA2BtE,EAAM0D,OACjC,wBAAyB1D,EAAMwD,YAC/B,wBAAyBxD,EAAMyD,YAC/B,qBAAsBrD,EAAMmE,IAC5B,wBAAyBnE,EAAMoE,OAC/B,iBAAkBxE,EAAM4D,OAE1BM,EAAa1G,MACb4G,EAAe5G,MACfwC,EAAM4C,OACP,MACO5C,EAAM6C,OAAK,CAAAxD,QAAAA,IAAA,CAEjBe,EAAMmE,QAENnE,EAAMf,SAAOqD,EAAAA,EAAAA,IAAA,aAEL,mBAAkB,MACjB,CAAEgB,QAAQe,EAAAA,EAAAA,IAAczE,EAAM0D,UAAS,EAAAhB,EAAAA,EAAAA,IAAA,cAG1CtC,EAAMf,cAGVe,EAAMsE,YAERtE,EAAMoE,gBAIL,CAAC,CACV,G","sources":["webpack://client/./src/components/store/AddProduct.vue","webpack://client/./src/components/store/AddProduct.vue?9ef2","webpack://client/./src/components/store/ProductsLayout.vue","webpack://client/./src/components/store/ProductsLayout.vue?f4e9","webpack://client/./src/views/store/PrductView.vue","webpack://client/../../../src/components/VDialog/VDialog.tsx","webpack://client/../../../src/components/VTable/VTable.tsx"],"sourcesContent":["<script setup>\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\n\nconst store = useStore();\n\nconst dialog = ref(false);\nconst product = ref({\n  name: '',\n  price: '',\n  quantity: '',\n  image: [],\n  category: '',\n  blob: null,\n});\n\nconst add = async () => {\n  await store.dispatch('productsStore/addProduct', {\n    name: product.value.name,\n    price: product.value.price,\n    quantity: product.value.quantity,\n    image: product.value.image[0],\n    category: product.value.category,\n  });\n  if (store.state.error) {\n    product.value = {\n      ...product.value,\n      name: '',\n      price: '',\n      cuantity: '',\n      image: [],\n      blob: null,\n      category: '',\n    };\n  }\n  dialog.value = false;\n};\n\nconst change = () => {\n  const file = product.value.image[0];\n  if (file) {\n    const blob = URL.createObjectURL(file);\n    product.value.blob = blob;\n  } else {\n    product.value.blob = null;\n  }\n};\n</script>\n\n<template>\n  <v-dialog v-model=\"dialog\" persistent width=\"1024\">\n    <template v-slot:activator=\"{ props }\">\n      <v-btn color=\"blue\" variant=\"tonal\" position=\"sticky\" v-bind=\"props\" @click=\"show\"\n        ><v-icon>mdi-plus</v-icon> Product\n      </v-btn>\n    </template>\n    <v-card class=\"bg-dark\">\n      <div v-if=\"error\">\n        <h1 class=\"text-white\">{{ error }}</h1>\n      </div>\n      <v-card-title style=\"color: #0fe\">\n        <span class=\"text-h5\">Add certificate</span>\n      </v-card-title>\n\n      <v-card-text style=\"color: #0fe\">\n        <v-container>\n          <v-row>\n            <v-col cols=\"12\" md=\"6\" sm=\"6\">\n              <v-text-field\n                label=\"Product Name\"\n                variant=\"outlined\"\n                v-model=\"product.name\"\n                required\n                type=\"text\"\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\" md=\"2\" sm=\"2\">\n              <v-text-field\n                label=\"Price\"\n                variant=\"outlined\"\n                v-model=\"product.price\"\n                required\n                type=\"text\"\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\" md=\"2\" sm=\"2\">\n              <v-text-field\n                label=\"Cuantity\"\n                name=\"url\"\n                variant=\"outlined\"\n                v-model=\"product.quantity\"\n                required\n                type=\"number\"\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\" md=\"2\" sm=\"2\">\n              <v-autocomplete\n                label=\"Category\"\n                :items=\"['Makanan', 'Pakaian', 'Skincare']\"\n                variant=\"outlined\"\n                v-model=\"product.category\"\n              ></v-autocomplete>\n            </v-col>\n\n            <v-col cols=\"12\">\n              <v-file-input\n                label=\"Image\"\n                variant=\"outlined\"\n                prepend-icon=\"mdi-image\"\n                v-model=\"product.image\"\n                accept=\"image/*\"\n                type=\"file\"\n                maxFileSize=\"512000\"\n                @change=\"change\"\n              ></v-file-input>\n              <v-card width=\"25%\" v-if=\"product.blob\">\n                <v-img :src=\"product.blob\"></v-img>\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"blue-darken-1\" variant=\"text\" @click=\"dialog = false\"> Close </v-btn>\n        <v-btn color=\"blue-darken-1\" variant=\"text\" @click=\"add\"> Save </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n","import script from \"./AddProduct.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddProduct.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed, onMounted, ref } from 'vue';\nimport AddProduct from '@/components/store/AddProduct.vue';\nimport { useStore } from 'vuex';\nimport router from '@/router';\n\nconst store = useStore();\nonMounted(async () => {\n  if (!store.state.productsStore.products) {\n    await store.dispatch('productsStore/getProducts');\n  }\n});\nconst data = computed(() => store.state.productsStore.products);\n\nconst actions = ref([\n  {\n    text: 'Delete',\n    icon: 'mdi-delete-outline',\n    color: 'error',\n    method: async (id) => {\n      await store.dispatch('productsStore/deleteProduct', id);\n    },\n  },\n  {\n    text: 'Edit',\n    icon: 'mdi-pencil-outline',\n    color: 'info',\n    method: async (id) => {\n      router.push({ name: 'Edit Product', params: { id } });\n    },\n  },\n]);\n\nconst mode = computed(() => {\n  if (store.state.mode) {\n    return 'bg-white';\n  } else {\n    return 'bg-element';\n  }\n});\n</script>\n\n<template>\n  <v-container fluid class=\"px-7\">\n    <v-card elevation=\"3\" class=\"py-5 rounded-lg\" :class=\"mode\">\n      <v-row>\n        <v-col style=\"z-index: 69\" class=\"text-center\">\n          <AddProduct />\n        </v-col>\n      </v-row>\n      <v-table class=\"px-5 bg-transparent\" hover>\n        <thead>\n          <tr class=\"\">\n            <th class=\"text-center bg-transparent\">No</th>\n            <th class=\"text-center bg-transparent\">Name</th>\n            <th class=\"text-center bg-transparent\">Price</th>\n            <th class=\"text-center bg-transparent\">Cuantity</th>\n            <th class=\"text-center bg-transparent\">Image</th>\n            <th class=\"text-center bg-transparent\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(product, i) in data\" :key=\"product\" class=\"text-center\">\n            <td class=\"text-capitalize\">{{ i + 1 }}</td>\n            <td class=\"text-capitalize text-start\">{{ product.name }}</td>\n            <td>Rp{{ product.price }}</td>\n            <td>{{ product.quantity }} pcs</td>\n            <td><v-img alt=\"Avatar\" height=\"60px\" :src=\"product.image\"></v-img></td>\n\n            <td>\n              <v-tooltip :text=\"action.text\" v-for=\"action in actions\" :key=\"action\">\n                <template v-slot:activator=\"{ props }\">\n                  <v-btn\n                    v-bind=\"props\"\n                    size=\"small\"\n                    :color=\"action.color\"\n                    :icon=\"action.icon\"\n                    class=\"ma-2\"\n                    @click=\"action.method(product._id)\"\n                  ></v-btn>\n                </template>\n              </v-tooltip>\n            </td>\n          </tr>\n        </tbody>\n      </v-table>\n    </v-card>\n  </v-container>\n</template>\n","import script from \"./ProductsLayout.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProductsLayout.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./PrductView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PrductView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue'\nimport { focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Types\nimport type { Component } from 'vue'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVDialogProps = propsFactory({\n  fullscreen: Boolean,\n  retainFocus: {\n    type: Boolean,\n    default: true,\n  },\n  scrollable: Boolean,\n\n  ...makeVOverlayProps({\n    origin: 'center center' as const,\n    scrollStrategy: 'block' as const,\n    transition: { component: VDialogTransition as Component },\n    zIndex: 2400,\n  }),\n}, 'v-dialog')\n\nexport const VDialog = genericComponent<OverlaySlots>()({\n  name: 'VDialog',\n\n  props: makeVDialogProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const overlay = ref<VOverlay>()\n    function onFocusin (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      if (\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost dialog\n        overlay.value?.globalTop &&\n        // It isn't the document or the dialog body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the dialog body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = focusableChildren(overlay.value.contentEl)\n\n        if (!focusable.length) return\n\n        const firstElement = focusable[0]\n        const lastElement = focusable[focusable.length - 1]\n\n        if (before === firstElement) {\n          lastElement.focus()\n        } else {\n          firstElement.focus()\n        }\n      }\n    }\n\n    if (IN_BROWSER) {\n      watch(() => isActive.value && props.retainFocus, val => {\n        val\n          ? document.addEventListener('focusin', onFocusin)\n          : document.removeEventListener('focusin', onFocusin)\n      }, { immediate: true })\n    }\n\n    watch(isActive, async val => {\n      await nextTick()\n      if (val) {\n        overlay.value!.contentEl?.focus({ preventScroll: true })\n      } else {\n        overlay.value!.activatorEl?.focus({ preventScroll: true })\n      }\n    })\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'dialog',\n        'aria-expanded': String(isActive.value),\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const [overlayProps] = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-dialog',\n            {\n              'v-dialog--fullscreen': props.fullscreen,\n              'v-dialog--scrollable': props.scrollable,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          aria-modal=\"true\"\n          activatorProps={ activatorProps.value }\n          role=\"dialog\"\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root>\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({}, overlay)\n  },\n})\n\nexport type VDialog = InstanceType<typeof VDialog>\n","// Styles\nimport './VTable.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\nexport type VTableSlots = {\n  default: []\n  top: []\n  bottom: []\n  wrapper: []\n}\n\nexport const makeVTableProps = propsFactory({\n  fixedHeader: Boolean,\n  fixedFooter: Boolean,\n  height: [Number, String],\n  hover: Boolean,\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'v-table')\n\nexport const VTable = genericComponent<VTableSlots>()({\n  name: 'VTable',\n\n  props: makeVTableProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { densityClasses } = useDensity(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-table',\n          {\n            'v-table--fixed-height': !!props.height,\n            'v-table--fixed-header': props.fixedHeader,\n            'v-table--fixed-footer': props.fixedFooter,\n            'v-table--has-top': !!slots.top,\n            'v-table--has-bottom': !!slots.bottom,\n            'v-table--hover': props.hover,\n          },\n          themeClasses.value,\n          densityClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots.top?.() }\n\n        { slots.default ? (\n          <div\n            class=\"v-table__wrapper\"\n            style={{ height: convertToUnit(props.height) }}\n          >\n            <table>\n              { slots.default() }\n            </table>\n          </div>\n        ) : slots.wrapper?.()}\n\n        { slots.bottom?.() }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VTable = InstanceType<typeof VTable>\n"],"names":["store","useStore","dialog","ref","product","name","price","quantity","image","category","blob","add","async","dispatch","value","state","error","cuantity","change","file","URL","createObjectURL","__exports__","onMounted","productsStore","products","data","computed","actions","text","icon","color","method","id","router","params","mode","makeVDialogProps","propsFactory","fullscreen","Boolean","retainFocus","type","default","scrollable","makeVOverlayProps","origin","scrollStrategy","transition","component","VDialogTransition","zIndex","VDialog","genericComponent","props","emits","setup","_ref","slots","isActive","useProxiedModel","scopeId","useScopeId","overlay","onFocusin","e","before","relatedTarget","after","target","contentEl","globalTop","document","includes","contains","focusable","focusableChildren","length","firstElement","lastElement","focus","IN_BROWSER","watch","val","addEventListener","removeEventListener","immediate","nextTick","preventScroll","activatorEl","activatorProps","mergeProps","String","useRender","overlayProps","VOverlay","_createVNode","_mergeProps","class","style","$event","activator","_len","arguments","args","Array","_key","VDefaultsProvider","forwardRefs","makeVTableProps","fixedHeader","fixedFooter","height","Number","hover","makeComponentProps","makeDensityProps","makeTagProps","makeThemeProps","VTable","themeClasses","provideTheme","densityClasses","useDensity","tag","top","bottom","convertToUnit","wrapper"],"sourceRoot":""}