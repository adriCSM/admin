{"version":3,"file":"js/166.a1ecd035.js","mappings":"4UAoBO,MAAMA,GAAqBC,EAAAA,EAAAA,GAAa,KAC1CC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAyB,CAAC,YACjC,cAEUC,GAAYC,EAAAA,EAAAA,KAAAA,CAAmC,CAC1DC,KAAM,YAENC,cAAc,EAEdC,MAAOT,IAEPU,MAAO,CACL,iBAAmBC,IAAqB,GAG1CC,MAAOH,EAAKI,GAAoB,IAAlB,MAAEC,EAAK,MAAEC,GAAOF,EAC5B,MAAM,UAAEG,EAAS,MAAEC,EAAK,KAAEC,IAASC,EAAAA,EAAAA,GAASV,GAEtCW,GAAMC,EAAAA,EAAAA,MACNC,GAAKC,EAAAA,EAAAA,KAAS,IAAMd,EAAMa,IAAO,YAAWF,MA4ClD,OA1CAI,EAAAA,EAAAA,IAAU,KACR,MAAOC,EAAYC,IAAgBC,EAAAA,EAAAA,IAAiBb,IAC7Cc,EAAYC,GAAMC,EAAAA,EAAAA,YAAmBrB,IACrCsB,EAAeC,GAAMC,EAAAA,EAAAA,YAAyBxB,GAErD,OAAAyB,EAAAA,EAAAA,IAAAJ,EAAAA,GAAAK,EAAAA,EAAAA,IAAA,OAEW,CACL,aACA1B,EAAM2B,QAEHX,EACAG,EAAU,IACVN,EAAGe,MAAK,QACHrB,EAAUqB,MAAK,MACjB5B,EAAM6B,QAAK,IAGdvB,EACHwB,QAASC,IAAA,IAAC,GACRlB,EAAE,WACFmB,EAAU,WACVC,EAAU,WACVC,GACDH,EAAA,OAAAN,EAAAA,EAAAA,IAAAD,EAAAA,GAAAE,EAAAA,EAAAA,IAEQJ,EAAa,IACbT,EAAGe,MAAK,mBACMI,EAAWJ,MAAK,SACxBK,EAAWL,MAAK,SAChBM,EAAWN,OACjBX,EAAY,SACPT,EAAK,OACNC,IACCH,EAAK,GAElB,IAMF,CAAC,CACV,I,iTC/EF,MAAM6B,GAAKrB,EAAAA,EAAAA,KAAS,IAAMsB,EAAAA,EAAAA,QAAAA,GAAAA,QACpBC,GAAQC,EAAAA,EAAAA,MAERC,GAAUC,EAAAA,EAAAA,IAAI,CAClBC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,YAAa,IAETC,GAAWL,EAAAA,EAAAA,KAAI,GAEfM,EAAMC,UACV,MAAMC,QAAcX,EAAMY,SAAS,mBAAoBV,EAAQX,OAE/DsB,OAAOC,KAAKL,IAAIE,EAAO,CACrBI,UAAW,SAAUC,GACnBhB,EAAMiB,OAAO,UAAW,4BACxBC,EAAAA,EAAAA,KAAY,CAAEzD,KAAM,qBACpB0D,QAAQC,IAAIJ,EAAOK,mBACrB,EACAC,UAAW,SAAUN,GACnBG,QAAQC,IAAIJ,EAAOK,mBACrB,EACAE,QAAS,SAAUP,GACjBhB,EAAMiB,OAAO,QAAS,0BACtBE,QAAQC,IAAIJ,EAAOK,mBACrB,EACAG,QAAS,WACPL,QAAQC,IAAI,0DACd,GACA,E,y4ECjCJ,MAAMK,EAAc,EAEpB,Q,0ECFA,MAAM,EAAc,EAEpB,O","sources":["webpack://client/../../../src/components/VCheckbox/VCheckbox.tsx","webpack://client/./src/components/layout/DonationLayout.vue","webpack://client/./src/components/layout/DonationLayout.vue?db00","webpack://client/./src/views/DonationView.vue"],"sourcesContent":["// Styles\nimport './VCheckbox.sass'\n\n// Components\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { makeVCheckboxBtnProps, VCheckboxBtn } from './VCheckboxBtn'\n\n// Composables\nimport { useFocus } from '@/composables/focus'\n\n// Utilities\nimport { computed } from 'vue'\nimport { filterInputAttrs, genericComponent, getUid, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '../VSelectionControl/VSelectionControl'\n\nexport type VCheckboxSlots = VInputSlots & VSelectionControlSlots\n\nexport const makeVCheckboxProps = propsFactory({\n  ...makeVInputProps(),\n  ...omit(makeVCheckboxBtnProps(), ['inline']),\n}, 'v-checkbox')\n\nexport const VCheckbox = genericComponent<VCheckboxSlots>()({\n  name: 'VCheckbox',\n\n  inheritAttrs: false,\n\n  props: makeVCheckboxProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { isFocused, focus, blur } = useFocus(props)\n\n    const uid = getUid()\n    const id = computed(() => props.id || `checkbox-${uid}`)\n\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const [inputProps, _1] = VInput.filterProps(props)\n      const [checkboxProps, _2] = VCheckboxBtn.filterProps(props)\n\n      return (\n        <VInput\n          class={[\n            'v-checkbox',\n            props.class,\n          ]}\n          { ...inputAttrs }\n          { ...inputProps }\n          id={ id.value }\n          focused={ isFocused.value }\n          style={ props.style }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n            }) => (\n              <VCheckboxBtn\n                { ...checkboxProps }\n                id={ id.value }\n                aria-describedby={ messagesId.value }\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                { ...controlAttrs }\n                onFocus={ focus }\n                onBlur={ blur }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckbox = InstanceType<typeof VCheckbox>\n","<script setup>\nimport router from '@/router';\nimport vuetify from '@/plugins/vuetify';\nimport { computed, ref } from 'vue';\nimport { useStore } from 'vuex';\n\nconst xs = computed(() => vuetify.display.xs.value);\nconst store = useStore();\n\nconst payload = ref({\n  firstName: '',\n  lastName: '',\n  email: '',\n  grossAmount: 0,\n});\nconst selected = ref(false);\n\nconst pay = async () => {\n  const token = await store.dispatch('payment/donation', payload.value);\n\n  window.snap.pay(token, {\n    onSuccess: function (result) {\n      store.commit('success', 'Donasi berhasil terkirim');\n      router.push({ name: 'Donation Success' });\n      console.log(result.transaction_status);\n    },\n    onPending: function (result) {\n      console.log(result.transaction_status);\n    },\n    onError: function (result) {\n      store.commit('error', 'Gagal melakukan donasi');\n      console.log(result.transaction_status);\n    },\n    onClose: function () {\n      console.log('customer closed the popup without finishing the payment');\n    },\n  });\n};\n</script>\n\n<template>\n  <v-container>\n    <v-row justify=\"center\" style=\"min-height: 100vh\" class=\"h-auto\">\n      <v-col cols=\"auto\" align-self=\"center\">\n        <v-card\n          min-height=\"80vh\"\n          :min-width=\"xs ? '80vw' : '60vw'\"\n          :max-width=\"xs ? '80vw' : '60vw'\"\n          elevation=\"2\"\n          rounded=\"xl\"\n          class=\"d-flex\"\n          :class=\"xs ? 'flex-column' : 'flex-row'\"\n        >\n          <v-btn\n            to=\"/\"\n            icon=\"mdi-arrow-left\"\n            color=\"#6368D9\"\n            position=\"absolute\"\n            class=\"text-white\"\n            elevation=\"2\"\n            style=\"z-index: 99\"\n          ></v-btn>\n          <v-row>\n            <v-col md=\"6\">\n              <v-img\n                src=\"../../assets/img/bg-donasi.jpg\"\n                min-width=\"100%\"\n                min-height=\"100%\"\n                cover\n              ></v-img>\n            </v-col>\n\n            <v-col class=\"pa-md-15 pa-10\" cols=\"12\" md=\"6\" align-self=\"center\">\n              <p class=\"mb-0\">Firs Name</p>\n\n              <v-text-field\n                v-model=\"payload.firstName\"\n                class=\"py-0\"\n                variant=\"outlined\"\n                color=\"#6368D9\"\n                base-color=\"blue\"\n                density=\"compact\"\n                required=\"true\"\n              >\n              </v-text-field>\n              <p class=\"mb-0\">Last Name</p>\n\n              <v-text-field\n                v-model=\"payload.lastName\"\n                class=\"py-0\"\n                variant=\"outlined\"\n                color=\"#6368D9\"\n                base-color=\"blue\"\n                density=\"compact\"\n                required=\"true\"\n              >\n              </v-text-field>\n\n              <p class=\"mb-0\">Email</p>\n              <v-text-field\n                v-model=\"payload.email\"\n                type=\"email\"\n                name=\"email\"\n                variant=\"outlined\"\n                class=\"py-0\"\n                color=\"#6368D9\"\n                base-color=\"blue\"\n                density=\"compact\"\n              >\n              </v-text-field>\n\n              <p class=\"mb-0\">Donation Amount (Rp)</p>\n              <v-select\n                v-model=\"payload.grossAmount\"\n                class=\"py-0\"\n                color=\"#6368D9\"\n                base-color=\"blue\"\n                label=\"Select\"\n                :items=\"[5000, 20000, 50000, 100000, 500000, 1000000]\"\n                variant=\"outlined\"\n                density=\"compact\"\n                hide-details=\"true\"\n              ></v-select>\n\n              <v-checkbox\n                v-model=\"selected\"\n                color=\"#6368D9\"\n                label=\"Yakin?\"\n                class=\"py-0\"\n                hide-details=\"true\"\n              ></v-checkbox>\n\n              <v-hover>\n                <template v-slot:default=\"{ isHovering, props }\">\n                  <v-btn\n                    v-bind=\"props\"\n                    :elevation=\"isHovering ? '6' : '2'\"\n                    rounded=\"pill\"\n                    width=\"100%\"\n                    :variant=\"isHovering ? 'flat' : 'outlined'\"\n                    color=\"#6368D9\"\n                    :class=\"isHovering ? 'text-white' : null\"\n                    @click=\"pay\"\n                    :disabled=\"!selected\"\n                    >Donasi</v-btn\n                  >\n                </template>\n              </v-hover>\n            </v-col>\n          </v-row>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n","import script from \"./DonationLayout.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DonationLayout.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./DonationView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DonationView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["makeVCheckboxProps","propsFactory","makeVInputProps","omit","makeVCheckboxBtnProps","VCheckbox","genericComponent","name","inheritAttrs","props","emits","focused","setup","_ref","attrs","slots","isFocused","focus","blur","useFocus","uid","getUid","id","computed","useRender","inputAttrs","controlAttrs","filterInputAttrs","inputProps","_1","VInput","checkboxProps","_2","VCheckboxBtn","_createVNode","_mergeProps","class","value","style","default","_ref2","messagesId","isDisabled","isReadonly","xs","vuetify","store","useStore","payload","ref","firstName","lastName","email","grossAmount","selected","pay","async","token","dispatch","window","snap","onSuccess","result","commit","router","console","log","transaction_status","onPending","onError","onClose","__exports__"],"sourceRoot":""}